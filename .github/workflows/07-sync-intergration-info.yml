name: deployed feedback

on:
  pull_request_target:
    types: [opened, synchronize, closed]


jobs:
  sync-info:
    name: record
    runs-on: ubuntu-latest
    steps:
      - name: install depends for load scripts
        run: |
          npm install @octokit/rest
          npm install @octokit/auth-app
          npm install js-yaml

      - name: Get token using github-script
        id: get-token
        uses: actions/github-script@v6
        env:
          APP_ID: 229710
          APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
        with:
          script: |
            const { Octokit } = require("@octokit/rest");
            const { createAppAuth } = require("@octokit/auth-app");
            const appOctokit = new Octokit({
              authStrategy: createAppAuth,
              auth: {
                appId: process.env.APP_ID,
                privateKey: process.env.APP_PRIVATE_KEY,
              }
            });
            const app_installation = await appOctokit.rest.apps.getRepoInstallation({
              owner: context.payload.organization.login,
              repo: context.payload.repository.name
            });
            const { token } = await appOctokit.auth({
              type: "installation",
              installationId: app_installation.data.id
            });
            core.setOutput('app_token', token)

      - name: get info
        shell: python
        env:
          GITHUB_TOKEN: ${{ steps.get-token.outputs.app_token }}
        run: |
          import requests
          import yaml
          import os
          import logging
          import json
          header = {
              "Accept": "application/vnd.github+json",
              "Authorization":"Bearer " + os.environ.get("GITHUB_TOKEN")
          }
          get_info_url= 'https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}'
          res = requests.get(get_info_url,header)
          get_body = json.loads(res.text)['body']
          print(get_body)
